name: Deploy Infrastructure and Website

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options: [test, prod]

env:
  TF_VERSION: '1.5.0'
  NODE_VERSION: '14'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'PROD' || 'TEST'))] }}
          aws-secret-access-key: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'PROD' || 'TEST'))] }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"
        working-directory: ./terraform/env/${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="environment=${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}" \
            -var="domain_name=${{ secrets.DOMAIN_NAME }}" \
            -var="bucket_name=${{ secrets.BUCKET_NAME }}" \
            -var="lambda_function_name=${{ secrets.LAMBDA_FUNCTION_NAME }}" \
            -var="dynamodb_table_name=${{ secrets.DYNAMODB_TABLE_NAME }}"
        working-directory: ./terraform/env/${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}

      - name: Deploy Website
        run: |
          BUCKET_NAME=$(terraform output -raw website_bucket_name)
          aws s3 sync ./Website/ s3://$BUCKET_NAME --delete
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        working-directory: ./terraform/env/${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'test') }}
