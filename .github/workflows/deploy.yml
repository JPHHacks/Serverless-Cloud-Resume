name: Test Infrastructure Setup

on:
  workflow_dispatch:  # Manual trigger only for now
    inputs:
      environment:
        description: 'Test infrastructure setup'
        required: true
        default: 'prod'
        type: choice
        options: [prod]

env:
  TF_VERSION: '1.5.0'

jobs:
  plan:  # Changed from deploy to plan
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read     # This allows the workflow to read the repository contents
    
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::222634359784:role/GitHubActionsRole  
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Debug Secrets
        run: |
          echo "TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"
          echo "TF_LOCK_TABLE: ${{ secrets.TF_LOCK_TABLE }}"

      - name: Terraform Init
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=prod/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"
        working-directory: ./terraform/backend-setup

      - name: Terraform Plan  # Changed from apply to plan
        run: |
          terraform plan \
            -var="environment=prod" \
            -var="lambda_function_name=${{ secrets.LAMBDA_FUNCTION_NAME }}" \
            -var="dynamodb_table_name=${{ secrets.DYNAMODB_TABLE_NAME }}"
        working-directory: ./terraform/env/prod